#!/usr/bin/env ruby

require 'thor'
require 'mushy'

class MushyCLI < Thor
  argument :file, optional: true, type: :string
  argument :values, optional: true, type: :hash

  desc "start FILE", "Run this workflow file."
  def start
    v = values || {}
    Mushy::Builder::Api.start(file, v).tap do |run|
      MushyCLI.set_special_values({ method: 'web', file: file, run: run }) if run.is_a?(Mushy::FireUpAWebServer)
    end
  end

  desc "build FILE", 'Build a flow.'
  def build
    MushyCLI.set_special_values( { method: 'build', file: file } )
  end

  def self.set_special_values data
    @special = data
  end

  def self.get_special_values
    @special
  end
end

MushyCLI.start(ARGV)

exit unless MushyCLI.get_special_values

require 'sinatra'
enable :run

if MushyCLI.get_special_values[:method] == 'web'
  the_file = MushyCLI.get_special_values[:file]

  get '/' do
    raw = [
      :accept,
      :body,
      :scheme,
      :script_name,
      :path_info,
      :port,
      :request_method,
      :query_string,
      :content_length,
      :media_type,
      :host,
      :form_data?,
      :referrer,
      :user_agent,
      :cookies,
      :xhr?,
      :url,
      :path,
      :ip,
      :secure?,
      :forwarded?,
      :env,
    ].reduce({}) { |t, i| t[i] = request.send(i); t}
    values = { method: :get, params: params, request: raw }
    Mushy::Builder::Api.start(the_file, values)
  end
elsif MushyCLI.get_special_values[:method] == 'build'
  the_file = MushyCLI.get_special_values[:file]

  get '/' do
    Mushy::Builder::Index.file
  end

  get '/bulma.css' do
    content_type :css
    Mushy::Builder::Bulma.file
  end

  get '/dark.css' do
    content_type :css
    Mushy::Builder::Dark.file
  end

  get '/axios.js' do
    content_type :js
    Mushy::Builder::Axios.file
  end

  get '/vue.js' do
    content_type :js
    Mushy::Builder::Vue.file
  end

  get '/flow' do
    content_type :json
    Mushy::Builder::Api.get_flow(the_file).to_json
  end

  get '/fluxs' do
    content_type :json
    Mushy::Builder::Api.get_fluxs.to_json
  end

  post '/run' do
    content_type :json

    result = Mushy::Builder::Api.run request.body.read

    { result: result }.to_json
  end

  post '/save' do
    content_type :json

    result = Mushy::Builder::Api.save the_file, request.body.read

    { result: result }.to_json
  end
end
